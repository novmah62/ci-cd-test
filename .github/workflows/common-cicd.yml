name: ci/cd
on:
    push:
    workflow_call:
        inputs:
            repo_name:
                required: true
                type: string
            action:
                required: true
                type: string
            source_branch:
                required: true
                type: string
            target_branch:
                required: true
                type: string
            commit_sha:
                required: false
                type: string
            pr_number:
                required: false
                type: string
            pr_url:
                required: false
                type: string
            checkout_postfix_path:
                required: false
                type: string
                default: odoo/addons
            # FIXME: remove ignore test input later (update all Odoo project to use additional_args)
            ignore_test:
                required: false
                type: string
            additional_args:
                required: false
                type: string

env:
    # Common variables
    REPO_PATH: ${{github.workspace}}/${{inputs.checkout_postfix_path}}
    WORKSPACE: ${{github.workspace}}
    SERVER_CICD_SCRIPT_FOLDER: /tmp/odoo/cicd/${{ inputs.repo_name }}/${{inputs.target_branch}}
    ODOO_ADDONS_PATH: ${{github.workspace}}/${{inputs.checkout_postfix_path}}

    ODOO_CONFIG_FILE: ${{github.workspace}}/.github/odoo/etc/odoo.conf
    DOCKER_FOLDER: ${{github.workspace}}/.github/odoo
    ODOO_TEST_DATABASE_NAME: odoo_test
    ODOO_LOG_FILE_CONTAINER: /var/log/odoo/odoo.log
    ODOO_LOG_FILE_HOST: ${{github.workspace}}/.github/odoo/logs/odoo.log
    CICD_ODOO_OPTIONS: ${{github.workspace}}/.github/conf/odoo.json
    CICD_SCRIPTS_PATH: ${{github.workspace}}/.github/scripts
    CICD_UTILS_SCRIPTS_PATH: ${{github.workspace}}/.github/scripts/utils.sh
    ODOO_IMAGE_EXTRACT_PATH: "/tmp/odoo.tar"
    DB_IMAGE_EXTRACT_PATH: "/tmp/db.tar"

    # ==== Workflow inputs ====
    SOURCE_BRANCH: ${{ inputs.source_branch }}
    TARGET_BRANCH: ${{ inputs.target_branch }}
    REPOSITORY: ${{ inputs.repo_name }}
    PR_NUMBER: ${{ inputs.pr_number }}
    PR_URL: ${{ inputs.pr_url }}

    # # ==== Repository secrets ====
    # GH_SSH_KEY: ${{secrets.GH_SSH_KEY}} # ssh key text to access GitHub repo
    # GH_CHECK_RUNS_MANAGER_TOKEN: ${{ secrets.GH_CHECK_RUNS_MANAGER_TOKEN }} # token use to create and update check run
    # GH_TOKEN: ${{secrets.GH_TOKEN}} # token use to build and push package to GitHub container registry

    # # ==== Environment secrets =====
    # TELEGRAM_CHANNEL_ID: ${{secrets.TELEGRAM_CHANNEL_ID}}
    # TELEGRAM_TOKEN: ${{secrets.TELEGRAM_TOKEN}}
    # SLACK_CHANNEL_ID: ${{secrets.SLACK_CHANNEL_ID}}
    # SLACK_TOKEN: ${{secrets.SLACK_TOKEN}}
    # SERVER_PRIVATE_KEY: ${{secrets.SERVER_PRIVATE_KEY}}
    # PROXY_SERVER_PRIVATE_KEY: ${{secrets.PROXY_SERVER_PRIVATE_KEY}}
    # SERVER_DB_PASSWORD: ${{secrets.SERVER_DB_PASSWORD}}

    # # ===== Environment variables =====
    # ODOO_IMAGE_TAG: ${{ vars.ODOO_IMAGE_TAG }}
    # DB_IMAGE_TAG: ${{ vars.DB_IMAGE_TAG }}
    # SERVER_HOST: ${{ vars.SERVER_HOST }}
    # SERVER_USER: ${{ vars.SERVER_USER }}
    # SERVER_SSH_PORT: ${{ vars.SERVER_SSH_PORT }}
    # PROXY_SERVER_HOST: ${{ vars.PROXY_SERVER_HOST }}
    # PROXY_SERVER_USER: ${{ vars.PROXY_SERVER_USER }}
    # PROXY_SERVER_SSH_PORT: ${{ vars.PROXY_SERVER_SSH_PORT }}
    # SERVER_DEPLOY_PATH: ${{ vars.SERVER_DEPLOY_PATH }}
    # SERVER_ODOO_URL: ${{ vars.SERVER_ODOO_URL }}
    # SERVER_ODOO_DB_NAME: ${{ vars.SERVER_ODOO_DB_NAME }}
    # SERVER_BACKUP_PATH: ${{ vars.SERVER_BACKUP_PATH }} # add _ to this environment variable to always create backup file from server

    # ===== Handle Input for actions/github-script ======
    INPUT_REPO_NAME: ${{inputs.repo_name}}
    INPUT_COMMIT_SHA: ${{inputs.commit_sha}}

jobs:
  cicd-test:
    name: CICD Test Vault Env
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get secrets from Vault
        uses: ./.github/actions/export-secrets-vault
        with:
          vault_addr: https://secret.vdx.vn
          token: ${{ secrets.VAULT_TOKEN }}
          secret_paths: cubbyhole/manhnv/ansible
      - name: Print all Vault env (test)
        run: printenv | sort

#      - uses: actions/checkout@v4
#      - name: Import Secrets from Vault
#        uses: hashicorp/vault-action@v2
#        with:
#          url: https://secret.vdx.vn
##          method: approle
#          token: ${{ secrets.VAULT_TOKEN }}
##          roleId: ${{ secrets.VAULT_ROLE_ID }}
##          secretId: ${{ secrets.VAULT_SECRET_ID }}
#          secrets: |
#             cubbyhole/manhnv/ansible        GITHUB_PAT | GITHUB_PAT ;
##            kv/data/vdx-vn/g10-qms/dev/db   odoo_db_host | odoo_db_host ;
##            kv/data/vdx-vn/g10-qms/dev/info odoo_master_password | odoo_master_password ;
##            kv/data/vdx-vn/g10-qms/dev/ssh  odoo_ssh_host | odoo_ssh_host;
#      - name: Print Vault env keys (test only)
#        run: |
#          echo "==== ENV KEYS FROM VAULT ===="
#          printenv | sort
  